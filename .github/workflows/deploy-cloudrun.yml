name: Deploy aire-guardianes → Cloud Run (infra repo)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Versión (p.ej. v2025.08.28-1). Si no la pones, se autogenera."
        required: false
        type: string
  push:
    branches: [ "main" ]
    tags:
      - "v*"

env:
  PROJECT_ID: aire-470107
  REGION: us-west1
  SERVICE: aire-guardianes
  AR_REPO: aire-guardianes-app
  IMAGE_NAME: aire-guardianes
  RUNTIME_SA: aire-deployer@aire-470107.iam.gserviceaccount.com
  APP_REPO: antoniomoneo/AIRE---Guardianes-del-Aire

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout infra repo (this repo)
        uses: actions/checkout@v4

      - name: Clone app repo via PAT
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          APP_REPO: ${{ env.APP_REPO }}
        run: |
          set -euxo pipefail
          rm -rf app
          git clone --depth=1 "https://${GH_PAT}@github.com/${APP_REPO}.git" app
          cd app
          git fetch origin main --depth=1 || true
          git checkout -q main || true

      - name: Debug env
        run: |
          docker --version
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "GITHUB_SHA=${GITHUB_SHA}"
          ls -la
          ls -la app || true
          test -f infra/Dockerfile && echo "Dockerfile OK" || (echo "FALTA infra/Dockerfile" && exit 1)

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev -q

      - name: Compute tag (si no empieza por v, lo forzamos)
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          RAW="${{ github.event.inputs.version }}"
          if [ -z "${RAW}" ]; then
            if [[ "${GITHUB_REF:-}" == refs/tags/* ]]; then
              RAW="${GITHUB_REF#refs/tags/}"
            else
              RAW="v$(date +%Y.%m.%d-%H%M)"
            fi
          fi
          case "$RAW" in
            v*) TAG="$RAW" ;;
            *)  TAG="v${RAW}" ;;
          esac
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
          echo "=> TAG calculado: $TAG"

      - name: Build image (contexto raíz, Dockerfile en infra/, código en app/)
        env:
          IMAGE_BASE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}
        run: |
          set -euxo pipefail
          docker build -f infra/Dockerfile -t "${IMAGE_BASE}:${GITHUB_SHA}" .

      - name: Push image (SHA)
        env:
          IMAGE_BASE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}
        run: |
          set -euxo pipefail
          docker push "${IMAGE_BASE}:${GITHUB_SHA}"

      - name: Tag & Push image (versión con v-prefijo)
        env:
          IMAGE_BASE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}
          TAG:        ${{ steps.meta.outputs.TAG }}
        run: |
          set -euxo pipefail
          docker tag  "${IMAGE_BASE}:${GITHUB_SHA}" "${IMAGE_BASE}:${TAG}"
          docker push "${IMAGE_BASE}:${TAG}"

      - name: Deploy to Cloud Run
        env:
          IMAGE:      ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.TAG }}
        run: |
          set -euxo pipefail
          gcloud run deploy "${{ env.SERVICE }}" \
            --image "${IMAGE}" \
            --region "${{ env.REGION }}" \
            --service-account "${{ env.RUNTIME_SA }}" \
            --allow-unauthenticated \
            --ingress all \
            --set-secrets "GEMINI_API_KEY=GEMINI_API_KEY:latest"

      - name: Show Service URL
        run: |
          gcloud run services describe ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --format='value(status.url)'
